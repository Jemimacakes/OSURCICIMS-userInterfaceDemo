#platform "uLCD-32PTU"

// Program Skeleton 1.2 generated 12/30/2016 11:24:22 AM

#inherit "4DGL_16bitColours.fnc"

#inherit "VisualConst.inc"

#inherit "userInterfaceDemoConst.inc"

#inherit "ledDigitsDisplay.inc"

func main()
//  var hstrings ; // Han8dle to access uSD strings, uncomment if required
//  var hFontx ;   // Handle to access uSD fonts, uncomment if required and change n to font number

    var touchState;
    var buttonState;
    var txBuf[32];
    var reply;

    gfx_ScreenMode(LANDSCAPE);
    touch_Set(TOUCH_ENABLE);
    setbaud(BAUD_57600);
    com_TXbuffer(txBuf, 32, 0);

//  Uncomment the following if uSD images, fonts or strings used.

    putstr("Mounting...");
    if (!(file_Mount()))
        while(!(file_Mount()))
        putstr("Drive not mounted...");
        pause(200);
        gfx_Cls();
        pause(200);
        wend
    endif
    gfx_Cls();
//    gfx_TransparentColour(0x0020);    // uncomment if transparency required
//    gfx_Transparency(ON);             // uncomment if transparency required

//  hFontn := file_LoadImageControl("USERIN~1.dan", "USERIN~1.gcn", 1); // Open handle to access uSD fonts, uncomment if required and change n to font number dropping a and c if > 9
//  hstrings := file_Open("USERIN~1.txf", 'r'); // Open handle to access uSD strings, uncomment if required
    hndl := file_LoadImageControl("USERIN~1.dat", "USERIN~1.gci", 1);

    reply := FormMain();
    repeat
        if(reply == iCounterButton)
            reply := FormCounter();
        else if(reply == iSquareButton)
            reply := FormSquare();
        else
            reply := FormMain();
        endif
    forever

endfunc

func FormMain()

    var touchState, buttonState, returnValue;
    gfx_Cls();

    // CounterButton 1.0 generated 1/17/2017 6:52:44 PM
    img_ClearAttributes(hndl, iCounterButton, I_TOUCH_DISABLE); // set to enable touch, only need to do this once
    img_Show(hndl, iCounterButton);  // show button, only do this once

    // SquareButton 1.0 generated 1/18/2017 3:15:48 PM
    img_ClearAttributes(hndl, iSquareButton, I_TOUCH_DISABLE); // set to enable touch, only need to do this once
    img_Show(hndl, iSquareButton);  // show button, only do this once

    // StaticWelcomeText 1.0 generated 1/17/2017 7:17:20 PM
    img_Show(hndl,iStaticWelcomeText);

    // Statictext1 1.0 generated 1/17/2017 7:23:38 PM
    img_Show(hndl,iStatictext1);

    repeat
        touchState := touch_Get(TOUCH_STATUS);
        buttonState := img_Touched(hndl, -1);

        if(touchState == TOUCH_PRESSED)
            if(buttonState == iCounterButton)
                img_SetWord(hndl, iCounterButton, IMAGE_INDEX, 1);
                img_Show(hndl, iCounterButton);
            endif
            if(buttonState == iSquareButton)
                img_SetWord(hndl, iSquareButton, IMAGE_INDEX, 1);
                img_Show(hndl, iSquareButton);
            endif
        endif

        if(touchState == TOUCH_RELEASED)
            if(buttonState == iCounterButton)
                img_SetWord(hndl, iCounterButton, IMAGE_INDEX, 0);
                img_Show(hndl, iCounterButton);
                returnValue := iCounterButton;
                goto exit;
            endif
            if(buttonState == iSquareButton)
                img_SetWord(hndl, iSquareButton, IMAGE_INDEX, 1);
                img_Show(hndl, iSquareButton);
                returnValue := iSquareButton;
                goto exit;
            endif
        endif

        if(touchState == TOUCH_MOVING)
            if(buttonState == iCounterButton)
                img_SetWord(hndl, iCounterButton, IMAGE_INDEX, 1);
                img_Show(hndl, iCounterButton);
            else
                img_SetWord(hndl, iCounterButton, IMAGE_INDEX, 0);
                img_Show(hndl, iCounterButton);
            endif
            if(buttonState == iSquareButton)
                img_SetWord(hndl, iSquareButton, IMAGE_INDEX, 1);
                img_Show(hndl, iSquareButton);
            else
                img_SetWord(hndl, iSquareButton, IMAGE_INDEX, 0);
                img_Show(hndl, iSquareButton);
            endif
        endif
    forever

exit:
    pause(200);

    img_SetAttributes(hndl, iCounterButton, I_TOUCH_DISABLE);
    img_SetAttributes(hndl, iSquareButton, I_TOUCH_DISABLE);

    return returnValue;

endfunc

func FormCounter()

    var touchState, buttonState, incrementBy, count, counting, tempRX, returnValue;
    gfx_Cls();
    incrementBy := 1;
    count := 0;
    counting := 0;

    // StartButton 1.0 generated 12/30/2016 12:40:26 PM
    img_ClearAttributes(hndl, iStartButton, I_TOUCH_DISABLE); // set to enable touch, only need to do this once
    img_Show(hndl, iStartButton);  // show button, only do this once

    // StopButton 1.0 generated 12/30/2016 12:40:27 PM
    img_ClearAttributes(hndl, iStopButton, I_TOUCH_DISABLE); // set to enable touch, only need to do this once
    img_Show(hndl, iStopButton);  // show button, only do this once

    // TransmitButton 1.0 generated 12/30/2016 12:40:29 PM
    img_ClearAttributes(hndl, iTransmitButton, I_TOUCH_DISABLE); // set to enable touch, only need to do this once
    img_Show(hndl, iTransmitButton);  // show button, only do this once

    // IncDecButton 1.0 generated 12/30/2016 12:40:30 PM
    img_ClearAttributes(hndl, iIncDecButton, I_TOUCH_DISABLE); // set to enable touch, only need to do this once
    img_Show(hndl, iIncDecButton);  // show button, only do this once

    // IncIncButton 1.0 generated 12/30/2016 12:40:31 PM
    img_ClearAttributes(hndl, iIncIncButton, I_TOUCH_DISABLE); // set to enable touch, only need to do this once
    img_Show(hndl, iIncIncButton);  // show button, only do this once

    // CountDecButton 1.0 generated 12/30/2016 12:40:33 PM
    img_ClearAttributes(hndl, iCountDecButton, I_TOUCH_DISABLE); // set to enable touch, only need to do this once
    img_Show(hndl, iCountDecButton);  // show button, only do this once

    // CountIncButton 1.0 generated 12/30/2016 12:40:34 PM
    img_ClearAttributes(hndl, iCountIncButton, I_TOUCH_DISABLE); // set to enable touch, only need to do this once
    img_Show(hndl, iCountIncButton);  // show button, only do this once

    // CounterBackButton 1.0 generated 1/17/2017 6:28:28 PM
    img_ClearAttributes(hndl, iCounterBackButton, I_TOUCH_DISABLE); // set to enable touch, only need to do this once
    img_Show(hndl, iCounterBackButton);  // show button, only do this once

    // CountMeter 1.0 generated 12/30/2016 2:00:33 PM
    img_SetWord(hndl, iCountMeter, IMAGE_INDEX, 0); // where frame is 0 to 100 (for a displayed 0 to 100)
    img_Show(hndl, iCountMeter);

    // CountGauge1 1.0 generated 12/30/2016 2:25:16 PM
    img_SetWord(hndl, iCountGauge1, IMAGE_INDEX, 0) ; // where frame is 0 to 100 (for a displayed 0 to 100)
    img_Show(hndl, iCountGauge1) ;

    // CountGauge2 1.0 generated 12/30/2016 2:00:38 PM
    img_SetWord(hndl, iCountGauge2, IMAGE_INDEX, 0); // where frame is 0 to 100 (for a displayed 0 to 100)
    img_Show(hndl, iCountGauge2);

    // Leddigits1 1.0 generated 12/30/2016 2:00:45 PM
    img_Show(hndl, iLeddigits1);  // show all digits at 0, only do this once
    ledDigitsDisplay(incrementBy, iLeddigits1+1, 155, 4, 1, 30, 0);

    // Leddigits2 1.0 generated 12/30/2016 2:00:47 PM
    img_Show(hndl, iLeddigits2);  // show all digits at 0, only do this once
    ledDigitsDisplay(count, iLeddigits2+1, 155, 4, 1, 30, 0);

    // Statictext1 1.0 generated 12/30/2016 2:00:48 PM
    img_Show(hndl, iIncrementByText);

    // Statictext2 1.0 generated 12/30/2016 2:00:50 PM
    img_Show(hndl, iCountText);


    repeat
        touchState := touch_Get(TOUCH_STATUS);
        buttonState := img_Touched(hndl, -1);

        if(touchState == TOUCH_PRESSED)
            if(buttonState == iStartButton)
                img_SetWord(hndl, iStartButton, IMAGE_INDEX, 1);
                img_Show(hndl, iStartButton);
                counting := 1;
            endif
            if(buttonState == iStopButton)
                img_SetWord(hndl, iStopButton, IMAGE_INDEX, 1);
                img_Show(hndl, iStopButton);
                counting := 0;
            endif
            if(buttonState == iTransmitButton)
                img_SetWord(hndl, iTransmitButton, IMAGE_INDEX, 1);
                img_Show(hndl, iTransmitButton);
                to(COM0); putstr("Current Count: ");
                to(COM0); putnum(DEC, count);
                to(COM0); putch('\n');
            endif
            if(buttonState == iIncDecButton)
                img_SetWord(hndl, iIncDecButton, IMAGE_INDEX, 1);
                img_Show(hndl, iIncDecButton);
                if(incrementBy != 1)
                    incrementBy--;
                else
                    incrementBy := 10;
                endif
            endif
            if(buttonState == iIncIncButton)
                img_SetWord(hndl, iIncIncButton, IMAGE_INDEX, 1);
                img_Show(hndl, iIncIncButton);
                if(incrementBy != 10)
                    incrementBy++;
                else
                    incrementBy := 1;
                endif
            endif
            if(buttonState == iCountDecButton)
                img_SetWord(hndl, iCountDecButton, IMAGE_INDEX, 1);
                img_Show(hndl, iCountDecButton);
                if(count != 0)
                    count--;
                else
                    count := 100;
                endif
            endif
            if(buttonState == iCountIncButton)
                img_SetWord(hndl, iCountIncButton, IMAGE_INDEX, 1);
                img_Show(hndl, iCountIncButton);
                if(count != 100)
                    count++;
                else
                    count := 0;
                endif
            endif
            if(buttonState == iCounterBackButton)
                img_SetWord(hndl, iCounterBackButton, IMAGE_INDEX, 1);
                img_Show(hndl, iCounterBackButton);
            endif
        endif

        if(touchState == TOUCH_RELEASED)
            if(buttonState == iStartButton)
                img_SetWord(hndl, iStartButton, IMAGE_INDEX, 0);
                img_Show(hndl, iStartButton);
            endif
            if(buttonState == iStopButton)
                img_SetWord(hndl, iStopButton, IMAGE_INDEX, 0);
                img_Show(hndl, iStopButton);
            endif
            if(buttonState == iTransmitButton)
                img_SetWord(hndl, iTransmitButton, IMAGE_INDEX, 0);
                img_Show(hndl, iTransmitButton);
            endif
            if(buttonState == iIncDecButton)
                img_SetWord(hndl, iIncDecButton, IMAGE_INDEX, 0);
                img_Show(hndl, iIncDecButton);
            endif
            if(buttonState == iIncIncButton)
                img_SetWord(hndl, iIncIncButton, IMAGE_INDEX, 0);
                img_Show(hndl, iIncIncButton);
            endif
            if(buttonState == iCountDecButton)
                img_SetWord(hndl, iCountDecButton, IMAGE_INDEX, 0);
                img_Show(hndl, iCountDecButton);
            endif
            if(buttonState == iCountIncButton)
                img_SetWord(hndl, iCountIncButton, IMAGE_INDEX, 0);
                img_Show(hndl, iCountIncButton);
            endif
            if(buttonState == iCounterBackButton)
                img_SetWord(hndl, iCounterBackButton, IMAGE_INDEX, 0);
                img_Show(hndl, iCounterBackButton);
                returnValue := iCounterBackButton;
                goto exit;
            endif
        endif

        if(touchState == TOUCH_MOVING)
            if(buttonState == iStartButton)
                img_SetWord(hndl, iStartButton, IMAGE_INDEX, 1);
                img_Show(hndl, iStartButton);
            else
                img_SetWord(hndl, iStartButton, IMAGE_INDEX, 0);
                img_Show(hndl, iStartButton);
            endif
            if(buttonState == iStopButton)
                img_SetWord(hndl, iStopButton, IMAGE_INDEX, 1);
                img_Show(hndl, iStopButton);
            else
                img_SetWord(hndl, iStopButton, IMAGE_INDEX, 0);
                img_Show(hndl, iStopButton);
            endif
            if(buttonState == iTransmitButton)
                img_SetWord(hndl, iTransmitButton, IMAGE_INDEX, 1);
                img_Show(hndl, iTransmitButton);
                to(COM0); putstr("Current Count: ");
                to(COM0); putnum(DEC, count);
                to(COM0); putch('\n');
            else
                img_SetWord(hndl, iTransmitButton, IMAGE_INDEX, 0);
                img_Show(hndl, iTransmitButton);
            endif
            if(buttonState == iIncDecButton)
                img_SetWord(hndl, iIncDecButton, IMAGE_INDEX, 1);
                img_Show(hndl, iIncDecButton);
                if(incrementBy != 1)
                    incrementBy--;
                else
                    incrementBy := 10;
                endif
            else
                img_SetWord(hndl, iIncDecButton, IMAGE_INDEX, 0);
                img_Show(hndl, iIncDecButton);
            endif
            if(buttonState == iIncIncButton)
                img_SetWord(hndl, iIncIncButton, IMAGE_INDEX, 1);
                img_Show(hndl, iIncIncButton);
                if(incrementBy != 10)
                    incrementBy++;
                else
                    incrementBy := 1;
                endif
            else
                img_SetWord(hndl, iIncIncButton, IMAGE_INDEX, 0);
                img_Show(hndl, iIncIncButton);
            endif
            if(buttonState == iCountDecButton)
                img_SetWord(hndl, iCountDecButton, IMAGE_INDEX, 1);
                img_Show(hndl, iCountDecButton);
                if(count != 0)
                    count--;
                else
                    count := 100;
                endif
            else
                img_SetWord(hndl, iCountDecButton, IMAGE_INDEX, 0);
                img_Show(hndl, iCountDecButton);
            endif
            if(buttonState == iCountIncButton)
                img_SetWord(hndl, iCountIncButton, IMAGE_INDEX, 1);
                img_Show(hndl, iCountIncButton);
                if(count != 100)
                    count++;
                else
                    count := 0;
                endif
            else
                img_SetWord(hndl, iCountIncButton, IMAGE_INDEX, 0);
                img_Show(hndl, iCountIncButton);
            endif
            if(buttonState == iCounterBackButton)
                img_SetWord(hndl, iCounterBackButton, IMAGE_INDEX, 1);
                img_Show(hndl, iCounterBackButton);
            else
                img_SetWord(hndl, iCounterBackButton, IMAGE_INDEX, 0);
                img_Show(hndl, iCounterBackButton);
            endif
        endif

        if(counting == 1)
            count := count + incrementBy;
            if(count > 100)
                count := count - 100;
            endif
        endif

        tempRX := serin();
        if(tempRX >= 0 && tempRX <= 100)
            count := tempRX;
        endif

        img_SetWord(hndl, iCountGauge1, IMAGE_INDEX, count);
        img_Show(hndl, iCountGauge1);
        img_SetWord(hndl, iCountGauge2, IMAGE_INDEX, count);
        img_Show(hndl, iCountGauge2);
        img_SetWord(hndl, iCountMeter, IMAGE_INDEX, count);
        img_Show(hndl, iCountMeter);

        ledDigitsDisplay(incrementBy, iLeddigits1+1, 155, 4, 1, 30, 0);
        ledDigitsDisplay(count, iLeddigits2+1, 155, 4, 1, 30, 0);
    forever

exit:
    pause(200);

    img_SetAttributes(hndl, iStartButton, I_TOUCH_DISABLE);
    img_SetAttributes(hndl, iStopButton, I_TOUCH_DISABLE);
    img_SetAttributes(hndl, iTransmitButton, I_TOUCH_DISABLE);
    img_SetAttributes(hndl, iIncDecButton, I_TOUCH_DISABLE);
    img_SetAttributes(hndl, iIncIncButton, I_TOUCH_DISABLE);
    img_SetAttributes(hndl, iCountDecButton, I_TOUCH_DISABLE);
    img_SetAttributes(hndl, iCountIncButton, I_TOUCH_DISABLE);
    img_SetAttributes(hndl, iCounterBackButton, I_TOUCH_DISABLE);

    return returnValue;

endfunc

func FormSquare()

    var touchState, buttonState;
    var squareX := 0, squareY := 0;
    var returnValue;

redraw:
    gfx_Cls();

    // SquareXDecButton 1.0 generated 1/18/2017 3:10:21 PM
    img_ClearAttributes(hndl, iSquareXDecButton, I_TOUCH_DISABLE); // set to enable touch, only need to do this once
    img_Show(hndl, iSquareXDecButton);  // show button, only do this once

    // SquareXIncButton 1.0 generated 1/18/2017 3:10:26 PM
    img_ClearAttributes(hndl, iSquareXIncButton, I_TOUCH_DISABLE); // set to enable touch, only need to do this once
    img_Show(hndl, iSquareXIncButton);  // show button, only do this once

    // SquareYDecButton 1.0 generated 1/18/2017 3:10:30 PM
    img_ClearAttributes(hndl, iSquareYDecButton, I_TOUCH_DISABLE); // set to enable touch, only need to do this once
    img_Show(hndl, iSquareYDecButton);  // show button, only do this once

    // SquareYIncButton 1.0 generated 1/18/2017 3:10:32 PM
    img_ClearAttributes(hndl, iSquareYIncButton, I_TOUCH_DISABLE); // set to enable touch, only need to do this once
    img_Show(hndl, iSquareYIncButton);  // show button, only do this once

    // SquareDrawButton 1.0 generated 1/18/2017 3:10:52 PM
    img_ClearAttributes(hndl, iSquareDrawButton, I_TOUCH_DISABLE); // set to enable touch, only need to do this once
    img_Show(hndl, iSquareDrawButton);  // show button, only do this once

    // SquareBackButton 1.0 generated 1/18/2017 3:11:01 PM
    img_ClearAttributes(hndl, iSquareBackButton, I_TOUCH_DISABLE); // set to enable touch, only need to do this once
    img_Show(hndl, iSquareBackButton);  // show button, only do this once

    // SquareXDigits 1.0 generated 1/18/2017 3:12:10 PM
    img_Show(hndl, iSquareXDigits);  // show all digits at 0, only do this once
    ledDigitsDisplay(squareX, iSquareXDigits+1, 100, 4, 1, 30, 0);

    // SquareYDigits 1.0 generated 1/18/2017 3:12:13 PM
    img_Show(hndl, iSquareYDigits);  // show all digits at 0, only do this once
    ledDigitsDisplay(squareY, iSquareYDigits+1, 100, 4, 1, 30, 0);

    // SquareTitleText 1.0 generated 1/18/2017 3:12:20 PM
    img_Show(hndl,iSquareTitleText) ;

    // SquareXText 1.0 generated 1/18/2017 3:12:31 PM
    img_Show(hndl,iSquareXText) ;

    // SquareYText 1.0 generated 1/18/2017 3:12:34 PM
    img_Show(hndl,iSquareYText) ;

    repeat
        touchState := touch_Get(TOUCH_STATUS);
        buttonState := img_Touched(hndl, -1);

        if(touchState == TOUCH_PRESSED)
            if(buttonState == iSquareXDecButton)
                img_SetWord(hndl, iSquareXDecButton, IMAGE_INDEX, 1);
                img_Show(hndl, iSquareXDecButton);
                if(squareX != 0)
                    squareX--;
                else
                    squareX := 320;
                endif
            endif
            if(buttonState == iSquareXIncButton)
                img_SetWord(hndl, iSquareXIncButton, IMAGE_INDEX, 1);
                img_Show(hndl, iSquareXIncButton);
                if(squareX != 320)
                    squareX++;
                else
                    squareX := 0;
                endif
            endif
            if(buttonState == iSquareYDecButton)
                img_SetWord(hndl, iSquareYDecButton, IMAGE_INDEX, 1);
                img_Show(hndl, iSquareYDecButton);
                if(squareY != 0)
                    squareY--;
                else
                    squareY := 240;
                endif
            endif
            if(buttonState == iSquareYIncButton)
                img_SetWord(hndl, iSquareYIncButton, IMAGE_INDEX, 1);
                img_Show(hndl, iSquareYIncButton);
                if(squareY != 240)
                    squareY++;
                else
                    squareY := 0;
                endif
            endif
            if(buttonState == iSquareDrawButton)
                img_SetWord(hndl, iSquareDrawButton, IMAGE_INDEX, 1);
                img_Show(hndl, iSquareDrawButton);
            endif
            if(buttonState == iSquareBackButton)
                img_SetWord(hndl, iSquareBackButton, IMAGE_INDEX, 1);
                img_Show(hndl, iSquareBackButton);
            endif
        endif

        if(touchState == TOUCH_RELEASED)
            if(buttonState == iSquareXDecButton)
                img_SetWord(hndl, iSquareXDecButton, IMAGE_INDEX, 0);
                img_Show(hndl, iSquareXDecButton);
            endif
            if(buttonState == iSquareXIncButton)
                img_SetWord(hndl, iSquareXIncButton, IMAGE_INDEX, 0);
                img_Show(hndl, iSquareXIncButton);
            endif
            if(buttonState == iSquareYDecButton)
                img_SetWord(hndl, iSquareYDecButton, IMAGE_INDEX, 0);
                img_Show(hndl, iSquareYDecButton);
            endif
            if(buttonState == iSquareYIncButton)
                img_SetWord(hndl, iSquareYIncButton, IMAGE_INDEX, 0);
                img_Show(hndl, iSquareYIncButton);
            endif
            if(buttonState == iSquareDrawButton)
                img_SetWord(hndl, iSquareDrawButton, IMAGE_INDEX, 0);
                img_Show(hndl, iSquareDrawButton);
                FormDrawSquare(squareX, squareY);
                goto redraw;
            endif
            if(buttonState == iSquareBackButton)
                img_SetWord(hndl, iSquareBackButton, IMAGE_INDEX, 0);
                img_Show(hndl, iSquareBackButton);
                returnValue := iSquareBackButton;
                goto exit;
            endif
        endif

        if(touchState == TOUCH_MOVING)
            if(buttonState == iSquareXDecButton)
                img_SetWord(hndl, iSquareXDecButton, IMAGE_INDEX, 1);
                img_Show(hndl, iSquareXDecButton);
                if(squareX != 0)
                    squareX--;
                else
                    squareX := 320;
                endif
            else
                img_SetWord(hndl, iSquareXDecButton, IMAGE_INDEX, 0);
                img_Show(hndl, iSquareXDecButton);
            endif
            if(buttonState == iSquareXIncButton)
                img_SetWord(hndl, iSquareXIncButton, IMAGE_INDEX, 1);
                img_Show(hndl, iSquareXIncButton);
                if(squareX != 320)
                    squareX++;
                else
                    squareX := 0;
                endif
            else
                img_SetWord(hndl, iSquareXIncButton, IMAGE_INDEX, 0);
                img_Show(hndl, iSquareXIncButton);
            endif
            if(buttonState == iSquareYDecButton)
                img_SetWord(hndl, iSquareYDecButton, IMAGE_INDEX, 1);
                img_Show(hndl, iSquareYDecButton);
                if(squareY != 0)
                    squareY--;
                else
                    squareY := 240;
                endif
            else
                img_SetWord(hndl, iSquareYDecButton, IMAGE_INDEX, 0);
                img_Show(hndl, iSquareYDecButton);
            endif
            if(buttonState == iSquareYIncButton)
                img_SetWord(hndl, iSquareYIncButton, IMAGE_INDEX, 1);
                img_Show(hndl, iSquareYIncButton);
                if(squareY != 240)
                    squareY++;
                else
                    squareY := 0;
                endif
            else
                img_SetWord(hndl, iSquareYIncButton, IMAGE_INDEX, 0);
                img_Show(hndl, iSquareYIncButton);
            endif
            if(buttonState == iSquareDrawButton)
                img_SetWord(hndl, iSquareDrawButton, IMAGE_INDEX, 1);
                img_Show(hndl, iSquareDrawButton);
            else
                img_SetWord(hndl, iSquareDrawButton, IMAGE_INDEX, 0);
                img_Show(hndl, iSquareDrawButton);
            endif
            if(buttonState == iSquareBackButton)
                img_SetWord(hndl, iSquareBackButton, IMAGE_INDEX, 1);
                img_Show(hndl, iSquareBackButton);
            else
                img_SetWord(hndl, iSquareBackButton, IMAGE_INDEX, 0);
                img_Show(hndl, iSquareBackButton);
            endif
        endif

         ledDigitsDisplay(squareX, iSquareXDigits+1, 100, 4, 1, 30, 0);
         ledDigitsDisplay(squareY, iSquareYDigits+1, 100, 4, 1, 30, 0);
    forever

exit:
    pause(200);

    img_SetAttributes(hndl, iSquareXDecButton, I_TOUCH_DISABLE);
    img_SetAttributes(hndl, iSquareXIncButton, I_TOUCH_DISABLE);
    img_SetAttributes(hndl, iSquareYDecButton, I_TOUCH_DISABLE);
    img_SetAttributes(hndl, iSquareYIncButton, I_TOUCH_DISABLE);
    img_SetAttributes(hndl, iSquareDrawButton, I_TOUCH_DISABLE);
    img_SetAttributes(hndl, iSquareBackButton, I_TOUCH_DISABLE);

    return returnValue;

endfunc

func FormDrawSquare(var squareX, var squareY)

    var touchState;
    gfx_Cls();
    gfx_RectangleFilled(squareX, squareY, 0, 0, ORANGE);

    repeat
        touchState := touch_Get(TOUCH_STATUS);

        if(touchState == TOUCH_RELEASED)
            goto exit;
        endif
    forever

exit:
    pause(200);

    return;

endfunc

